# COMMAND=TEST DOCS_VERSION=$(cat contents/conf.py | grep -Po "(?<=^release\s=\s')[0-9.]*(?='$)") HOST_UID=$(id -u) docker-compose -f docker-compose-dev.yaml up
#
# Intended for normal development. Does not currently supports hot/live reloading. To reflect
# new updates will need to docker-compose down -> up. COMMAND=TEST will build using single
# branch config passed into env variables i.e. faster (see docker-compose-build.yaml).
# COMMAND=PROD will use all versions included in build_version.json.
# Note: If requirements or Dockerfile change, will need to add --build flag to docker-compose.
# Make sure to add an entry into your /etc/hosts file as `127.0.0.1 fakeservices.datajoint.io`
# This serves as an alias for the domain to resolve locally.
# With this config and the configuration below in NGINX, you should be able to verify it is
# running properly by navigating in your browser to `https://fakeservices.datajoint.io`.
version: "2.4"
x-net: &net
  networks:
      - main
services:
  datajoint-docs:
    <<: *net
    extends:
      file: ./docker-compose-build.yaml
      service: datajoint-docs
    command:
      - "ignored"
      - sh
      - -lc
      - |
        set -e
        echo "----- Serving $${COMMAND} docs now... -----"
        cd build
        python3 -m http.server
  fakeservices.datajoint.io:
    <<: *net
    image: raphaelguzman/nginx:v0.0.15
    environment:
      - ADD_pharus_TYPE=REST
      - ADD_pharus_ENDPOINT=datajoint-docs:8000
      - ADD_pharus_PREFIX=/
      - HTTPS_PASSTHRU=TRUE
    ports:
      - "443:443"
      - "80:80"
networks:
  main:
